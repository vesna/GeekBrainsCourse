'''41) Напишите программу, которая сортирует элементы массива по возрастанию последней цифры десятичной записи чисел.
Входные данные
6
219 234 890 81 73 96
Первая строка содержит размер массива N . Во второй строке через пробел задаются N чисел – элементы массива. 
Гарантируется, что 0 < N ≤ 1000 .
Выходные данные
890 81 73 234 96 219
Программа должна вывести в одной строке элементы массива, отсортированного в порядке возрастания последней 
цифры в десятичной записи чисел, разделив их пробелами. Числа, у которых последняя цифра одинаковая,
должны быть выведены в том же порядке, в котором они стояли в исходной последовательности.
'''
# a = "219 234 890 81 73 96"
# a = list(map(int,a.split()))
# a = sorted(a,key=lambda x: x%10)
# print(a)

'''42)Напишите программу, которая сортирует отдельно элементы массива с чётными и нечётными значениями.
Все элементы с нечётными значениями нужно отсортировать по возрастанию, а элементы с чётными значениями – по убыванию. 
При этом элементы каждой из групп (как чётные, так и нечётные) должны занимать то же множество позиций в массиве, 
что и до сортировки.
Входные данные
6
3 1 2 5 4 6
Первая строка содержит размер массива N . Во второй строке через пробел задаются N чисел – элементы массива. 
Гарантируется, что 0 < N ≤ 100000 .
Выходные данные
1 3 6 5 4 2
Программа должна вывести все элементы отсортированного массива в одну строку, разделив их пробелами.
lambda, filter
'''
# a = "3 1 2 5 4 6"
# a = list(map(int,a.split()))

# def summnum(x):
#     summ = 0
#     while x!=0:
#         summ+=x%10
#         x//=10
#     return summ

# a = sorted(a,key=summnum,reverse=True)
# print(a)
'''43) ДОП
Напишите программу, которая сортирует натуральные числа в массиве по убыванию суммы цифр десятичной записи числа. 
При равенстве сумм цифр числа должны сохранить исходный порядок.
Входные данные
6
 9 21 32 55 81 11
Первая строка содержит размер массива N . Во второй строке через пробел задаются N чисел – элементы массива. 
Гарантируется, что 0 < N ≤ 1000 .
Выходные данные
55 9 81 32 21 11
Программа должна вывести в одной строке элементы массива, отсортированного в порядке убыванию суммы цифр десятичной 
записи числа, разделив их пробелами.
Решения в файле
'''
a = [9, 21, 32, 55, 81, 11]
print(a)
h =[1 if i%2==0 else 0 for i in a]
print(h)
even = [i for i in a if i%2==0]
odd = [i for i in a if i%2==1]

even.sort(reverse=True)
odd.sort()
print(even)
print(odd)

for index,value in enumerate(h):
    if value == 1:
        h[index] = even.pop(0)
    else:
        h[index] = odd.pop(0)
print(h)